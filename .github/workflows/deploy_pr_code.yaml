name: Deploy PR Code

on:
    workflow_dispatch:
        inputs:
            pr_number:
                description: "Pull Request Number"
                required: true
                type: number

env:
    AWS_REGION: "${{ vars.AWS_DEFAULT_REGION }}"

jobs:
    check_if_pr_exists:
        runs-on: ubuntu-latest
        env:
            GH_TOKEN: ${{ github.token }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Get PR state
              id: get_pr_state
              run: |
                  pr_json=$(gh pr view ${{ inputs.pr_number }} --json state || true)
                  state=$(echo $pr_json | jq .state | cut -d '"' -f 2)
                  echo "state=$state" >> $GITHUB_OUTPUT

            - name: Fail the workflow if the PR doesn't exist
              run: |
                  if [[ -z "${{ steps.get_pr_state.outputs.state }}" ]]; then
                      echo "PR does not exist. Exiting..."
                      exit 1
                  fi

                  echo "PR exists. Continuing..."

    check_if_pr_infrastructure_exists:
        needs: check_if_pr_exists
        runs-on: ubuntu-latest
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        outputs:
            instance_id: ${{ steps.get_instance_id.outputs.instance_id }}

        steps:
            - name: Get the instance id if it exits
              id: get_instance_id
              run: |
                  INSTANCE_ID=$(aws ec2 describe-instances \
                                      --filters "Name=tag:Name,Values=github-actions-proj-pr-${{ inputs.pr_number }}-instance" \
                                      --query "Reservations[*].Instances[*].[InstanceId, State.Name]" \
                                      --output text)

                  instance_id=$(echo $INSTANCE_ID | awk '{print $1}')
                  instance_state=$(echo $INSTANCE_ID | awk '{print $2}')

                  if [[ $instance_state != 'running' ]]; then
                      instance_id=''
                  fi

                  echo "instance_id=$instance_id" >> $GITHUB_OUTPUT

    deploy_pr_infrastructure:
        needs: check_if_pr_infrastructure_exists
        if: needs.check_if_pr_infrastructure_exists.outputs.instance_id == ''
        uses: ./.github/workflows/deploy_pr_infra.yaml
        with:
            pr_number: "${{ inputs.pr_number }}"
        secrets:
            TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
